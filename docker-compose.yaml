version: "3.7"

services:
#  postgres-db:
#    image: postgres:11
#    restart: always
##    healthcheck:
##      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
##      interval: 5s
##      timeout: 5s
##      retries: 2
#    networks:
#      - telegram_net
#    environment:
#      POSTGRES_PASSWORD: "postgres"
#      POSTGRES_DB: "postgres"
#      POSTGRES_USER: "postgres"
#      POSTGRES_HOST: "postgres-db"
#      POSTGRES_PORT: 5432
#    ports:
#      - "5432:5432"
#    volumes:
#      - data:/var/lib/postgresql/data
#    container_name: postgres-db

  server:
    networks:
      - telegram_net
    links:
      - postgres-db
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - postgres-db
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile_server
    container_name: grpc_server

  client:
    networks:
      - telegram_net
    ports:
      - "8081:8081"
    restart: on-failure
    depends_on:
      - server
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile_client
    container_name: grpc_client

#  migration:
#    networks:
#      - telegram_net
#    links:
#      - postgres-db
#    restart: on-failure
#    depends_on:
#      - postgres-db
#    build:
#      context: .
#      dockerfile: dockerfiles/Dockerfile_migration

networks:
  telegram_net:
    driver: bridge

#volumes:
#  data:
#   driver: local